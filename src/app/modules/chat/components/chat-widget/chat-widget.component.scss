// Variables
$primary-color: #000000;   // LujanDev black
$secondary-color: #ffffff; // white background
$accent-color: #666666;    // neutral gray used for dividers / muted text
$muted-color: #8a8a8a;     // lighter gray for timestamps
$border-radius: 12px;
$shadow: 0 12px 30px rgba(11,43,74,0.12);
$transition: all 0.25s cubic-bezier(.2,.9,.2,1);

// Contenedor principal
.chat-widget-container {
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 1100;
  font-family: Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
  display: flex;
  /* stack elements so the button sits at the very bottom and the panel grows upward */
  flex-direction: column-reverse;
  align-items: flex-end;
  gap: 12px;
  -webkit-font-smoothing:antialiased;
  /* Avoid blocking interactions underneath the page when minimized; only interactive children receive pointer events */
  pointer-events: none;
}

// Botón de chat
.chat-button {
  width: 64px;
  height: 64px;
  border-radius: 50%;
  background: $primary-color; /* solid black */
  color: $secondary-color;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  box-shadow: 0 8px 30px rgba(11,43,74,0.18);
  transition: transform 220ms ease, box-shadow 220ms ease;
  position: relative;
  outline: none;

  &:hover {
    transform: translateY(-3px) scale(1.03);
    box-shadow: 0 12px 30px rgba(0,0,0,0.18);
  }

  &.has-unread {
    animation: pulse 2.2s infinite;
  }

  .chat-icon {
    font-size: 22px;
    display:block;
    color: $secondary-color; /* ensure white icon */
  }

  .unread-badge {
    position: absolute;
    top: -6px;
    right: -6px;
    background-color: $primary-color;
    color: $secondary-color;
    border-radius: 50%;
    min-width: 20px;
    height: 20px;
    padding: 0 6px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    font-weight: 700;
    box-shadow: 0 4px 10px rgba(0,0,0,0.08);
    border: 1px solid rgba(255,255,255,0.06);
  }
}

/* Ensure interactive children can receive pointer events */
.chat-button,
.chat-window {
  pointer-events: auto;
}

// Ventana de chat
.chat-window {
  position: relative;
  width: 380px;
  max-width: calc(100vw - 40px);
  height: 620px; /* taller per request */
  max-height: calc(100vh - 120px);
  background-color: $secondary-color;
  border-radius: 0px;
  box-shadow: $shadow;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  /* ensure window aligns above the button and expands upward */
  margin: 0;
  align-self: flex-end;
  transform-origin: bottom right;
  transform: translateY(18px) scale(0.99);
  opacity: 0;
  pointer-events: none;
  transition: transform 260ms $transition, opacity 220ms ease;

  &.open {
    transform: translateY(0) scale(1);
    opacity: 1;
    pointer-events: auto;
  }
}

// Cabecera del chat
.chat-header {
  background: $primary-color; /* black header */
  color: $secondary-color;
  padding: 14px 16px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 8px;

  h3 {
    margin: 0;
    font-size: 15px;
    font-weight: 700;
    letter-spacing: 0.1px;
  }

  .chat-actions {
    display: flex;

    button {
      background: transparent;
      border: none;
      color: $secondary-color;
      cursor: pointer;
      margin-left: 8px;
      padding: 6px;
      font-size: 16px;
      border-radius: 8px;

      &:hover { background: rgba(255,255,255,0.05); }
    }
  }
}

// Cuerpo del chat
  .chat-body {
  flex: 1 1 auto;
  padding: 20px;
  overflow-y: auto;
  background-color: $secondary-color; /* white */

  .welcome-message {
    text-align: center;
    color: $muted-color;
    margin: 18px 0;

    p { margin: 6px 0; font-size: 14px; }
  }

  .messages-list {
    display: flex;
    flex-direction: column;
    gap: 12px;
    padding: 6px 0;
  }

  .message-item {
    margin-bottom: 4px;
    max-width: 82%;
    display: flex;

    .message-content {
      padding: 12px 16px;
      border-radius: 14px;
      position: relative;
      box-shadow: 0 2px 8px rgba(0,0,0,0.04);

      .message-text { margin: 0 0 6px 0; font-size: 14px; line-height: 1.35; }
      .message-time { font-size: 11px; color: $muted-color; opacity: 0.9; display:block; text-align:right; }
    }

    &.user-message {
      align-self: flex-end;

      .message-content {
        background: $primary-color; /* black */
        color: $secondary-color; /* white */
        border-bottom-right-radius: 6px;
      }
    }

    &.agent-message {
      align-self: flex-start;

      .message-content {
        background: #f3f3f3; /* light gray */
        color: #000;
        border-bottom-left-radius: 6px;
      }
    }

    &.system-message {
      align-self: center;

      .message-content {
        background: transparent;
        color: $muted-color;
        font-style: italic;
        padding: 6px 10px;
        font-size: 13px;
        box-shadow: none;
      }
    }
  }

  .typing-indicator {
    padding: 8px 6px;
    font-size: 13px;
    color: $muted-color;
    font-style: italic;
    p { margin:0; }
  }
}

// Pie del chat
.chat-footer {
  padding: 24px 14px;
  border-top: 1px solid rgba(0,0,0,0.06);
  background: $secondary-color; /* black footer for minimalist look */

  .message-input-container {
    display: flex;
    gap: 5px;
    flex-direction: column;
    align-items: center;

    .input-wrapper { position: relative; width: 100%; }

    textarea {
      width: 100%;
      height: 100%; /* increased input height */
      padding: 10px 48px 0px 10px; /* right padding for icon */
      font-size: 15px;
      resize: none;
      font-family: inherit;
      background: transparent; /* transparent per request */
      color: $primary-color;/* white text on black footer */
      border: none;
      border-bottom: 1px solid $primary-color; /* thin bottom border */
      transition: border-color 160ms ease, box-shadow 160ms ease;

      &::placeholder { color: rgba(114, 112, 112, 0.45); }
      // &:focus { outline: none; border-bottom-color: rgba(255,255,255,0.9); }
    }

    .send-btn {
      position: absolute;
      right: 0px;
      top: 50%;
      transform: translateY(-50%);
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: transparent;
      color: $primary-color;
      display: inline-flex;
      justify-content: center;
      align-items: center;
      border: none;
      cursor: pointer;
      transition: transform 140ms ease, opacity 140ms ease;

      &:hover:not(:disabled) { transform: translateY(-50%) scale(1.05); opacity: 0.95; }
      &:disabled { cursor: not-allowed; }

      svg { width: 20px; height: 20px; }
    }
  }
}

/* Confirmación minimalista de cierre (flotante en la parte inferior del panel) */
.close-confirm {
  position: absolute;
  /* Respect iOS safe-area insets so the popup stays above the Safari bottom bar */
  left: 12px;
  right: 12px;
  bottom: 18px;
  /* Older iOS Safari used constant(); modern browsers use env(). Provide both fallbacks. */
  bottom: calc(18px + constant(safe-area-inset-bottom));
  bottom: calc(18px + env(safe-area-inset-bottom));
  left: calc(12px + constant(safe-area-inset-left));
  left: calc(12px + env(safe-area-inset-left));
  right: calc(12px + constant(safe-area-inset-right));
  right: calc(12px + env(safe-area-inset-right));
  /* Ensure popup sits above everything else in the app */
  z-index: 99999;
  display: flex;
  justify-content: center;
  pointer-events: auto;

  &__content {
    width: 100%;
    max-width: 480px;
    background: $secondary-color;
    color: $primary-color;
    border-radius: 12px;
    padding: 12px 14px;
    box-shadow: 0 8px 28px rgba(0,0,0,0.12);
    border: 1px solid rgba(0,0,0,0.06);
    /* entry animation: fade + slide from bottom */
    opacity: 0;
    transform: translateY(12px);
    will-change: transform, opacity;
    animation: fadeSlideIn 260ms cubic-bezier(.2,.9,.2,1) forwards;
    transition: transform 200ms ease, opacity 160ms ease;
  }

  &__title {
    margin: 0 0 6px 0;
    font-size: 14px;
    font-weight: 700;
  }

  &__text {
    margin: 0 0 10px 0;
    font-size: 13px;
    color: $muted-color;
  }

  &__actions {
    display: flex;
    gap: 8px;
    justify-content: flex-end;
    align-items: center;
  }

  .btn {
    font-size: 13px;
    padding: 8px 12px;
    border-radius: 8px;
    cursor: pointer;
  }

  .btn-abandon {
    background: $primary-color;
    color: $secondary-color;
    border: none;
  }

  .btn-cancel {
    background: $secondary-color;
    color: $primary-color;
    border: 1px solid rgba(0,0,0,0.08);
  }

  /* Slight layout tweak on very small screens */
  @media (max-width: 420px) {
    left: 8px;
    right: 8px;
    /* push a bit more on very small screens to avoid Safari bars */
    bottom: calc(14px + env(safe-area-inset-bottom));
    &__content { padding: 10px; }
    .btn { padding: 7px 10px; font-size: 13px; }
  }
}

/* Keyframes for popup animation */
@keyframes fadeSlideIn {
  from {
    opacity: 0;
    transform: translateY(14px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeSlideOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(12px);
  }
}

// Animación para botón con mensajes no leídos
@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 0, 0, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(255, 0, 0, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 0, 0, 0);
  }
}

// Estilos responsive
@media (max-width: 700px) {
  .chat-window {
    width: calc(100vw - 24px);
    right: 12px;
    left: 12px;
    bottom: 90px;
    height: calc(78vh);
    border-radius: 12px;
  }

  .chat-button {
    width: 56px;
    height: 56px;
  }
}

@media (max-width: 420px) {
  .chat-window { height: calc(80vh); }
  .chat-button { width: 52px; height: 52px; }
}

/* Mobile full-screen behaviour for <= 768px */
@media (max-width: 768px) {
  /* Only apply fullscreen positioning when the window is actually open */
  .chat-window.open {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100vw;
    /* Use visual-viewport height when available to avoid iOS Safari 100vh issues */
    height: var(--vvh, 100vh);
    max-width: 100vw;
    max-height: var(--vvh, 100vh);
    border-radius: 0;
    margin: 0;
    transform: none !important;
    opacity: 1 !important;
    pointer-events: auto !important;
    z-index: 2001;
    background: $secondary-color;
  }

  /* Improve iOS Safari behavior when visual viewport changes (keyboard open) */
  .vv-keyboard-open .chat-window.open {
    /* ensure the panel uses visual viewport height and no overflow */
    height: var(--vvh, 100vh) !important;
    max-height: var(--vvh, 100vh) !important;
    overflow: hidden !important;
    overflow-x: hidden !important;
    overscroll-behavior: contain !important;
    -webkit-overflow-scrolling: auto !important; /* avoid buggy bounce in some iOS builds */
  }

  /* Header sticky behavior only needed when the window is open/fullscreen */
  .chat-window.open .chat-header {
    position: sticky;
    top: 0;
    z-index: 20;
  }

  /* hide overlay by default; reveal it only when the chat-window is open */
  .chat-overlay { display: none; }
  .chat-window.open + .chat-overlay {
    display: block;
    position: fixed;
    inset: 0;
    background: rgba(0,0,0,0.45);
    z-index: 2000;
  }

  .chat-window.open { z-index: 2001; }

  /* style the action buttons (close/minimize) when visible in open state */
  .chat-window.open .chat-actions { display:flex; gap:8px; align-items:center; }
  .chat-window.open .chat-actions .close-btn,
  .chat-window.open .chat-actions .minimize-btn {
    background: transparent; color: $secondary-color; border: none; padding: 8px; border-radius: 8px; cursor: pointer;
  }

  /* Make the confirmation popup fixed on mobile so it remains above virtual keyboard and browser UI */
  .chat-window.open {
    /* ensure the open panel is fixed to viewport and doesn't allow the page behind to scroll */
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden; /* prevent double scrolling */
    overscroll-behavior: contain; /* avoid scroll chaining to body */
    overflow-x: hidden; /* prevent horizontal scroll */
    touch-action: pan-y; /* allow vertical scrolling inside, prevent horizontal gestures */
    max-width: 100vw;
    max-height: 100vh;
  }

  .chat-window.open .close-confirm {
    position: fixed;
    /* keep a small gap from screen edges and respect safe-area */
    left: calc(12px + env(safe-area-inset-left));
    right: calc(12px + env(safe-area-inset-right));
    bottom: calc(18px + env(safe-area-inset-bottom));
    z-index: 99999; /* ensure above everything */
    display: flex;
    justify-content: center;
    pointer-events: auto;
  }

  /* Add extra bottom padding so chat content can scroll above the keyboard; footer stays sticky */
  .chat-window.open .chat-body {
    padding-bottom: calc(140px + env(safe-area-inset-bottom));
    transition: padding-bottom 180ms ease;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: contain;
    overflow-x: hidden; /* prevent horizontal scroll inside messages list */
    max-width: 100%;
    box-sizing: border-box;
  }

  /* When visual viewport indicates keyboard open, improve footer layering & touch */
  .vv-keyboard-open .chat-window.open:focus-within .chat-footer,
  .vv-keyboard-open .chat-window.open .chat-footer {
    /* ensure footer is fixed and above keyboard */
    position: fixed !important;
    left: calc(0px + env(safe-area-inset-left));
    right: calc(0px + env(safe-area-inset-right));
    bottom: calc(var(--keyboard-offset, 0px) + env(safe-area-inset-bottom));
    z-index: 99999 !important;
    border-radius: 0 !important;
    box-shadow: none !important;
    /* force compositor layer and ensure touch events are delivered */
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
    pointer-events: auto;
  }

  /* Ensure the send button is promoted to its own layer for responsiveness */
  .vv-keyboard-open .chat-window.open .chat-footer .send-btn {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    pointer-events: auto;
    touch-action: manipulation;
  }

  /* Keep footer sticky by default, but when an input inside the window is focused
     (virtual keyboard likely visible), pin the footer to the viewport above the keyboard
     using safe-area insets. Use :focus-within so no TS is required. */
  .chat-window.open .chat-footer {
    position: sticky;
    /* Raise the footer a bit by default so it stays above browser UI when not focused */
    bottom: calc(var(--keyboard-offset, 0px) + 30px + env(safe-area-inset-bottom));
    z-index: 30;
    background: $secondary-color;
    transition: bottom 180ms ease, transform 160ms ease;
    /* improve touch responsiveness on iOS Safari */
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  .chat-window.open:focus-within .chat-body {
    padding-bottom: calc(220px + env(safe-area-inset-bottom));
  }

  .chat-window.open:focus-within .chat-footer {
    position: fixed;
    left: calc(0px + env(safe-area-inset-left));
    right: calc(0px + env(safe-area-inset-right));
    /* Use CSS variable set by assets/js/keyboard-offset.js to lift footer above the virtual keyboard
       and still respect safe-area inset. If the variable is not set, fallback to 12px. */
    bottom: calc(var(--keyboard-offset, 0px) + 12px + env(safe-area-inset-bottom));
    z-index: 99998;
    /* When keyboard is visible and footer is pinned, make it fully rectangular and minimalistic */
    border-radius: 0;
    box-shadow: none;
    /* no transition so it stays fixed immediately when keyboard appears */
    transition: none;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }
}