import { Injectable } from '@angular/core';
import { PreloadingStrategy, Route } from '@angular/router';
import { Observable, of } from 'rxjs';

@Injectable({
  providedIn: 'root',
})

export class CustomPreloadingStrategy implements PreloadingStrategy {

    /**
     * üöÄ, vamos a implementar lazy loading optimizado + preloading. La idea es:
     * Lazy load: Todos los m√≥dulos grandes (home, shop, account, auth) se cargan solo cuando el usuario accede a ellos.
     *
     * Preloading: Algunos m√≥dulos ‚Äúimportantes‚Äù (por ejemplo home) se pueden precargar en segundo plano despu√©s de que la app 
     * inicial est√© lista, para que la navegaci√≥n sea instant√°nea sin bloquear la carga inicial.
     * 
     * @param route 
     * @param load 
     * @returns 
     */
    preload(route: Route, load: () => Observable<any>): Observable<any> {
        // Si el m√≥dulo tiene data: { preload: true }, lo precargamos
        if (route.data && route.data['preload']) {
            return load();
        } else {
            return of(null);
        }
    }
}
